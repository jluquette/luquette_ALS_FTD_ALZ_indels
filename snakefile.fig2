# vim: syntax=python

rule fig2_raw_snv_spectrum:
    input:
        "input/neuron___mut___A.rda",
        "input/oligo___mut___A.rda"
    output:
        "plots/fig2/raw_spectrum/snv_spectrum.svg",
        "plots/fig2/raw_spectrum/snv_spectrum.pdf",
        "plots/fig2/raw_spectrum/snv_spectrum.tsv"
    log:
        "plots/fig2/raw_spectrum/snv_spectrum.log"
    script:
        "scripts/plot_raw_snv.R"

rule fig2_raw_indel_spectrum:
    input:
        "input/neuron___mut___indel_A.rda",
        "input/oligo___mut___indel_A.rda"
    output:
        "plots/fig2/raw_spectrum/indel_spectrum.svg",
        "plots/fig2/raw_spectrum/indel_spectrum.pdf",
        "plots/fig2/raw_spectrum/indel_spectrum.tsv"
    log:
        "plots/fig2/raw_spectrum/indel_spectrum.log"
    script:
        "scripts/plot_raw_indel.R"


# The only difference between SNV and indel COSMIC databases is that
# we add the PTA universal artifact signature to COSMIC SNV.
# since the snv_table rule uses {qualtype}, it could be called by
# snakemake to generate the indel table, which would be an error.
# ruleorder makes the indel rule take precedence for the indel table
# only.
ruleorder: fig2_make_cosmic_indel_table > fig2_make_cosmic_snv_table

rule fig2_make_cosmic_indel_table:
    input:
        cosmic="input/any___cosmic___indel_A.csv",
    output:
        "analysis/tables/cosmic_full___indel_A.csv"
    log:
        "analysis/tables/cosmic_full___indel_A.log"
    script:
        "scripts/make_cosmic_indel_table.R"


rule fig2_make_cosmic_snv_table:
    input:
        cosmic="input/any___cosmic___A.csv",
        lysis_sig="analysis/tables/any___lysis_pta___A.csv"
    output:
        "analysis/tables/cosmic_full___{qualtype}.csv"
    log:
        "analysis/tables/cosmic_full___{qualtype}.log"
    script:
        "scripts/make_cosmic_snv_table.R"


rule fig2_cosmic_fit:
    input:
        "analysis/tables/{celltype}___mut___{qualtype}.csv",
        "analysis/fig1/aging_rate_analysis/{celltype}___mutburden___{qualtype}.csv",
        "analysis/tables/{cosmic}___{qualtype}.csv"
    output:
        "analysis/fig2/{cosmic}/{celltype}___mutmat___{qualtype}.csv",
        "analysis/fig2/{cosmic}/{celltype}___expomat___{qualtype}.csv"
    params:
        muttype=lambda wildcards: 'Indel' if wildcards.qualtype == 'indel_A' else 'SNV'
    log:
        "analysis/fig2/{cosmic}/{celltype}___cosmic_fit___{qualtype}.log"
    script:
        "scripts/fit_cosmic.R"


rule fig2_score_cosmic_analysis:
    input:
        "analysis/fig2/cosmic_full/{celltype}___mutmat___{qualtype}.csv",
        "analysis/fig1/aging_rate_analysis/{celltype}___mutburden___{qualtype}.csv",
        "analysis/tables/cosmic_full___{qualtype}.csv"
    output:
        "analysis/fig2/cosmic_signature_inclusion/{celltype}_signature_scores_{qualtype}.csv"
    log:
        "analysis/fig2/cosmic_signature_inclusion/{celltype}_signature_scores_{qualtype}.log"
    params:
        celltype=lambda wildcards: 'Neuron' if wildcards.celltype == 'neuron' else 'Oligo',
        qualtype=lambda wildcards: 'Indel' if wildcards.qualtype == 'indel_A' else 'SNV'
    script:
        "scripts/score_cosmic_signatures.R"


rule fig2_select_cosmic_sigs:
    input:
        "analysis/fig2/cosmic_signature_inclusion/neuron_signature_scores_{qualtype}.csv",
        "analysis/fig2/cosmic_signature_inclusion/oligo_signature_scores_{qualtype}.csv"
    output:
        "analysis/fig2/cosmic_signature_inclusion/final_signature_selection_{qualtype}.svg",
        "analysis/fig2/cosmic_signature_inclusion/final_signature_selection_{qualtype}.pdf",
        "analysis/fig2/cosmic_signature_inclusion/final_signature_selection_{qualtype}.csv"
    params:
        # these values were determined MANUALLY by looking at the plots
        # generated above and considering the signatures detected.
        pct_resid_reduc=lambda wildcards: 1 if wildcards.qualtype == 'indel_A' else 1,
        stability=lambda wildcards: 0.5 if wildcards.qualtype == 'indel_A' else 0.5,
        pct_contrib=lambda wildcards: 5 if wildcards.qualtype == 'indel_A' else 5,
        pct_cells=lambda wildcards: 50 if wildcards.qualtype == 'indel_A' else 50,
        muts_per_year=lambda wildcards: 0.125 if wildcards.qualtype == 'indel_A' else 0.5,
        age_signif=2,
        num_cutoffs=lambda wildcards: 4 if wildcards.qualtype == 'indel_A' else 5,
        # currently not excluding any sigs by name
        #sigs_to_exclude=''
    log:
        "analysis/fig2/cosmic_signature_inclusion/final_signature_selection_{qualtype}.log"
    script:
        "scripts/select_cosmic_sigs.R"


# Use output of fig2_select_cosmic_sigs to make a COSMIC table with only
# the selected signatures.
rule fig2_make_reduced_cosmic_table:
    input:
        "analysis/fig2/cosmic_signature_inclusion/final_signature_selection_{qualtype}.csv",
        "analysis/tables/cosmic_full___{qualtype}.csv"
    output:
        "analysis/tables/cosmic_reduced___{qualtype}.csv"
    log:
        "analysis/tables/cosmic_reduced___{qualtype}.log"
    script:
        "scripts/reduce_cosmic.R"


rule fig2_cosmic_barplots:
    input:
        "analysis/fig2/cosmic_reduced/{celltype}___expomat___{qualtype}.csv",
        "analysis/fig1/aging_rate_analysis/{celltype}___mutburden___{qualtype}.csv"
    output:
        "plots/fig2/cosmic_aging/{celltype}_barplots_{qualtype}.svg",
        "plots/fig2/cosmic_aging/{celltype}_barplots_{qualtype}.pdf"
    log:
        "plots/fig2/cosmic_aging/{celltype}_barplots_{qualtype}.log"
    script:
        "scripts/plot_cosmic_barplots.R"


rule fig2_cosmic_vs_age_plots:
    input:
        "analysis/fig2/cosmic_reduced/neuron___expomat___{qualtype}.csv",
        "analysis/fig1/aging_rate_analysis/neuron___mutburden___{qualtype}.csv",
        "analysis/fig2/cosmic_reduced/oligo___expomat___{qualtype}.csv",
        "analysis/fig1/aging_rate_analysis/oligo___mutburden___{qualtype}.csv"
    output:
        "plots/fig2/cosmic_aging/scatterplots_{qualtype}.svg",
        "plots/fig2/cosmic_aging/scatterplots_{qualtype}.pdf",
        "plots/fig2/cosmic_aging/scatterplots_{qualtype}.csv"
    log:
        "plots/fig2/cosmic_aging/scatterplots_{qualtype}.log"
    script:
        "scripts/plot_cosmic_vs_age.R"
