# vim: syntax=python

rule gtex_expression:
    input:
        "enrichment/gtex_expression_mc02/quantile/{group}___{qualtype}.10quantiles{dot}{corrected}.csv"
    output:
        "suppfig3{underscore}{corrected}/panel_a_gtex_expression_{group}___{qualtype}{dot}{corrected}.svg",
        "suppfig3{underscore}{corrected}/panel_a_gtex_expression_{group}___{qualtype}{dot}{corrected}.pdf",
        "suppfig3{underscore}{corrected}/panel_a_gtex_expression_{group}___{qualtype}{dot}{corrected}.csv"
    params:
        ignore='BINSIZE=10000,BINSIZE=100000,BINSIZE=1000000',
        group='datasource',
        highlight='group=Brain'
    log:
        "suppfig3{underscore}{corrected}/panel_a_gtex_expression_{group}___{qualtype}{dot}{corrected}.log"
    localrule: True
    resources:
        mem_mb=4000,
        localjob=1
    script:
        "scripts/plot_enrichment_grid.R"


rule repliseq_individual_cell_lines:
    input:
        neuron_repliseq="enrichment/repliseq/quantile/pta_neuron___{qualtype}.10quantiles{dot}{corrected}.csv",
        oligo_repliseq="enrichment/repliseq/quantile/pta_oligo___{qualtype}.10quantiles{dot}{corrected}.csv"
    output:
        pdf="suppfig3{underscore}{corrected}/panel_b_repliseq___{qualtype}{dot}{corrected}.pdf",
        svg="suppfig3{underscore}{corrected}/panel_b_repliseq___{qualtype}{dot}{corrected}.svg",
        csv="suppfig3{underscore}{corrected}/panel_b_repliseq___{qualtype}{dot}{corrected}.csv"
    log:
        "suppfig3{underscore}{corrected}/panel_b_repliseq___{qualtype}{dot}{corrected}.log"
    localrule: True
    resources:
        mem_mb=4000,
        localjob=1
    script:
        "scripts/suppfig3_panel_b.R"


# Just concatenates oligo and neuron tables so that the plot code can
# put them side by side and match axes.
rule chromhmm_tssa_helper:
    input:
        neuron="enrichment/roadmap_chromhmm_brain/bed_regions/pta_neuron___AB{dot}{corrected}.csv",
        oligo="enrichment/roadmap_chromhmm_brain/bed_regions/pta_oligo___AB{dot}{corrected}.csv"
    output:
        "suppfig3{underscore}{corrected}/chromhmm_tss_complete_table{dot}{corrected}.csv"
    resources:
        mem_mb=1000
    shell:
        """
        (echo "celltype,$(head -1 {input.neuron})" ;
         awk 'BEGIN {{ FS=","; OFS=","; }} {{ if (NR != 1) {{ print "neuron", $0; }} }} ' {input.neuron} ;
         awk 'BEGIN {{ FS=","; OFS=","; }} {{ if (NR != 1) {{ print "oligo", $0; }} }} ' {input.oligo} ) > {output}
        """


rule chromhmm_tssa:
    input:
        "suppfig3/chromhmm_tss_complete_table.csv"
    output:
        "suppfig3/panel_c_chromhmm_tss.svg",
        "suppfig3/panel_c_chromhmm_tss.pdf",
        "suppfig3/panel_c_chromhmm_tss.csv"
    params:
        ignore='quantile=.,quantile=10_TssBiv,quantile=11_BivFlnk,quantile=12_EnhBiv,quantile=13_ReprPC,quantile=14_ReprPCWk,quantile=15_Quies,quantile=2_TssAFlnk,quantile=3_TxFlnk,quantile=4_Tx,quantile=5_TxWk,quantile=6_EnhG,quantile=7_Enh,quantile=8_ZNF/Rpts,quantile=9_Het,quantile=outside',
        xlab='eid',
        xgroup='quantile',
        ygroup='celltype',
        highlight='eid=E073'
    log:
        "suppfig3/panel_c_chromhmm_tss.log"
    resources:
        mem_mb=4000
    script:
        "scripts/plot_enrichment.R"


rule plot_quantile_sensitivity_and_covariates:
    input:
        neuron_sens="enrichment/sensitivity/pta_neuron.summary.txt",
        oligo_sens="enrichment/sensitivity/pta_oligo.summary.txt"
    output:
        pdf='suppfig3_corrected/quantile_sensitivity_panels.pdf'
    log:
        'suppfig3_corrected/quantile_sensitivity_panels.log'
    threads: 1
    localrule: True
    resources:
        mem_mb=1000,
        localjob=1
    script:
        "scripts/suppfig3_quantile_sensitivity.2.R"


rule plot_bed_sensitivity_and_covariates:
    input:
        sens=expand("enrichment/sensitivity/{group}.summary.txt",
            group=[ 'pta_neuron', 'pta_oligo' ])
    output:
        pdf='suppfig3_corrected/bed_sensitivity_panels.pdf'
    params:
        datasources='roadmap,nott_enhprom',  # roadma=chromhmm
        group_colors=','.join(g + "=" + config['group_colors'][g] for g in ['pta_neuron', 'pta_oligo'])
    log:
        'suppfig3_corrected/bed_sensitivity_panels.log'
    threads: 1
    localrule: True
    resources:
        mem_mb=1000,
        localjob=1
    script:
        "scripts/suppfig3_bed_sensitivity.R"
