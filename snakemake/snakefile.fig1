# vim: syntax=python

rule genic_distribution:
    input:
        neuron_snv="enrichment/gencode_simplified/bed_regions/neuron___AB/bedenrich/SUMMARY.rda",
        neuron_indel="enrichment/gencode_simplified/bed_regions/neuron___indel_AB/bedenrich/SUMMARY.rda",
        oligo_snv="enrichment/gencode_simplified/bed_regions/oligo___AB/bedenrich/SUMMARY.rda",
        oligo_indel="enrichment/gencode_simplified/bed_regions/oligo___indel_AB/bedenrich/SUMMARY.rda"
    output:
        svg="fig1/panel_c_genic_enrichment.svg",
        pdf="fig1/panel_c_genic_enrichment.pdf",
        csv="fig1/panel_c_genic_enrichment.csv"
    params:
        signal_to_plot='datasource=gencode_simplified',
        features="intergenic,intronic,exonic,other"   # "other" refers to transcripts without exons/introns
    resources:
        mem=1000
    log:
        "fig1/panel_c_genic_enrichment.log"
    script:
        "scripts/barplot_enrich_new.R"


# Just a copyover of the default files
rule aging_rates_figure:
    input:
        svg="aging_rates/all___mutburden_models___{qualtype}.svg",
        pdf="aging_rates/all___mutburden_models___{qualtype}.pdf",
        models="aging_rates/all___mutburden_models___{qualtype}.csv",
        mutburdens="aging_rates/all___mutburden___{qualtype}.csv"
    output:
        svg='fig1/panel_b_aging_rates_{qualtype}.svg',
        pdf='fig1/panel_b_aging_rates_{qualtype}.pdf',
        mutburdens='fig1/panel_b_aging_rates_{qualtype}_burdens.csv',
        models='fig1/panel_b_aging_rates_{qualtype}_model.csv'
    resources:
        mem=1000
    log:
        'fig1/panel_b_aging_rates_{qualtype}.log'
    shell:
        """
        cp -n {input.svg} {output.svg}
        cp -n {input.pdf} {output.pdf}
        cp -n {input.models} {output.models}
        cp -n {input.mutburdens} {output.mutburdens}
        """


rule run_snpeff_helper:
    input:
        vcf="vcfs/{celltype}___mut___{qualtype}.vcf"
    output:
        vcf="snpeff/{celltype}___snpeff___{qualtype}.vcf"
    log:
        "snpeff/{celltype}___snpeff___{qualtype}.run_snpeff.log"
    resources:
        mem=8000
    shell:
        """
        snakemake/scripts/run_snpeff.sh \
            {input.vcf} {output.vcf} > {log} 2>&1
        """


rule snpeff_analysis:
    input:
        "snpeff/neuron___snpeff___AB.vcf",
        "snpeff/neuron___snpeff___indel_AB.vcf",
        "snpeff/oligo___snpeff___AB.vcf",
        "snpeff/oligo___snpeff___indel_AB.vcf"
    output:
        svg="fig1/panel_d_snpeff.svg",
        pdf="fig1/panel_d_snpeff.pdf",
        csv="fig1/panel_d_snpeff.csv"
    resources:
        mem=4000
    log:
        "fig1/panel_d_snpeff.log"
    script:
        "scripts/plot_snpeff.R"
