# vim: syntax=python
#

atac_celltypes = [ 'OPC', 'astrocyte', 'endothelial', 'excitatory_neuron',
              'inhibitory_neuron', 'microglia', 'oligo' ]
libraries = [ 'merged' ] + [ str(x) for x in range(1, 12) ]


wildcard_constraints:
    libid='|'.join(libraries),
    atac_celltype='|'.join(atac_celltypes)


#rule all:
    #input:
        #expand('bigwig/transpositions.library{libid}_{atac_celltype}.bigwig',
            #libid=libraries, atac_celltype=atac_celltypes)


rule scatacseq_extract_mapfile:
    input:
        "input/any___scatacseq_umap___none.csv"
    output:
        "data/scatacseq/auxiliary/sample_to_cell_map.txt"
    resources:
        mem_mb=1000
    shell:
        """
        cut -f2,3 -d, {input} | tr ',' '\t' | tr ' ' '_' | tail -n +2 > {output}
        """
        

rule scatacseq_frags_to_beds:
    input:
        frags="input/any___scatacseq_frags___none.tsv",
        mapfile="data/scatacseq/auxiliary/sample_to_cell_map.txt"
    output:
        expand("data/scatacseq/bed/transpositions.library{libid}_{atac_celltype}.bed",
            libid=libraries, atac_celltype=atac_celltypes)
    log:
        "data/scatacseq/bed/frags_to_beds.log"
    resources:
        mem_mb=4000
    shell:
        """
        snakemake/scripts/scatacseq_10x_frags_to_bed.py \
            {input.frags} {input.mapfile} data/scatacseq/bed/transpositions
        """


rule scatacseq_bedgraph_to_bigwig:
    input:
        bed="data/scatacseq/bed/transpositions.library{libid}_{atac_celltype}.bed",
        genome="input/any___hg19_genome_withXYM___none.genome"
    output:
        tmp=temp("data/scatacseq/bigwig/transpositions.library{libid}_{atac_celltype}.tmp"),
        bw="data/scatacseq/bigwig/transpositions.library{libid}_{atac_celltype}.bigwig"
    log:
        "data/scatacseq/bigwig/transpositions.library{libid}_{atac_celltype}.log"
    resources:
        mem_mb=4000
    shell:
        """
        snakemake/scripts/scatacseq_fragbed_to_bigwig.sh \
            {input.bed} {input.genome} {output.bw} {output.tmp}
        """
