# vim: syntax=python

import pandas as pd

# Contains bigwig paths and metadata
cancer_meta = pd.read_csv('manifests/CANCER_SNVDENS.MANIFEST')

scatacseq_meta = pd.read_csv('manifests/SCATACSEQ.MANIFEST')

scrnaseq_meta = pd.read_csv('manifests/SCRNASEQ_EXPRESSION.MANIFEST')


rule cancer_density_correlation:
    input:
        neuron_muts="input/neuron___mut___A.rda",
        oligo_muts="input/oligo___mut___A.rda",
        tiles="alignability/genome_tiles/genome_tiles_1000000binsize.bed",
        # quantile is ignored. raw scores used.
        cancer_qbeds=expand('enrichment/cancer_snvdens/quantile/qbed/cancer_snvdens___{tumor}___normdens.1000000binsize_10quantiles.qbed',
            tumor=sorted(set(cancer_meta['tumor'])))
    output:
        pdf='fig6/panel_a.pdf',
        svg='fig6/panel_a.svg',
        csv='fig6/panel_a.csv'
    log:
        'fig6/panel_a.log'
    resources:
        mem_mb=4000
    script:
        "scripts/fig6_panel_a.R"

# same as panel a, but adding in elderly MDA glia
rule cancer_density_correlation_with_mda_ols:
    input:
        neuron_muts="input/neuron___mut___A.rda",
        oligo_muts="input/{mdatype}_elderly___mut___A.rda",
        tiles="alignability/genome_tiles/genome_tiles_1000000binsize.bed",
        # quantile is ignored. raw scores used.
        cancer_qbeds=expand('enrichment/cancer_snvdens/quantile/qbed/cancer_snvdens___{tumor}___normdens.1000000binsize_10quantiles.qbed',
            tumor=sorted(set(cancer_meta['tumor'])))
    output:
        pdf='fig6/panel_a_{mdatype}_elderly_supp.pdf',
        svg='fig6/panel_a_{mdatype}_elderly_supp.svg',
        csv='fig6/panel_a_{mdatype}_elderly_supp.csv'
    log:
        'fig6/panel_a_{mdatype}_elderly_supp.log'
    resources:
        mem_mb=4000
    script:
        "scripts/fig6_panel_a.R"


rule cancer_density_vs_scatacseq:
    input:
        tiles="alignability/genome_tiles/genome_tiles_1000000binsize.bed",
        # quantile is ignored. raw scores used.
        cancer_qbeds=expand('enrichment/cancer_snvdens/quantile/qbed/cancer_snvdens___{tumor}___normdens.1000000binsize_10quantiles.qbed',
            tumor=sorted(set(cancer_meta['tumor']))),
        atac_qbeds=expand('enrichment/scatacseq/quantile/qbed/scatacseq___librarymerged___merged___{celltype}.1000000binsize_10quantiles.qbed',

            celltype=sorted(set(scatacseq_meta['celltype'])))
    output:
        barplot_pdf='fig6/panel_b_barplot.pdf',
        barplot_svg='fig6/panel_b_barplot.svg',
        heatmap_pdf='fig6/panel_b_heatmap.pdf',
        heatmap_svg='fig6/panel_b_heatmap.svg',
        csv='fig6/panel_b.csv'
    log:
        'fig6/panel_b.log'
    resources:
        mem_mb=4000
    script:
        "scripts/fig6_panel_b.R"



# NOTICE! NOTICE!
# We are using scrnaseq_expression_mc02 here because of the 1 MB bins.
# mc08 (meaning only windows covered 80% by a gene) has only ~250 windows
# across the genome that are not NA, because genes only cover about 1/3rd
# of the genome (incl. introns).
rule cancer_density_vs_scrnaseq:
    input:
        tiles="alignability/genome_tiles/genome_tiles_1000000binsize.bed",
        # quantile is ignored. raw scores used.
        cancer_qbeds=expand('enrichment/cancer_snvdens/quantile/qbed/cancer_snvdens___{tumor}___normdens.1000000binsize_10quantiles.qbed',
            tumor=sorted(set(cancer_meta['tumor']))),
        rna_qbeds=expand('enrichment/scrnaseq_expression_mc02/quantile/qbed/scrnaseq___expression___combined___combined___{celltype}.1000000binsize_10quantiles.qbed',

            celltype=sorted(set(scrnaseq_meta['celltype'])))
    output:
        barplot_pdf='fig6/panel_c_barplot.pdf',
        barplot_svg='fig6/panel_c_barplot.svg',
        heatmap_pdf='fig6/panel_c_heatmap.pdf',
        heatmap_svg='fig6/panel_c_heatmap.svg',
        csv='fig6/panel_c.csv'
    log:
        'fig6/panel_c.log'
    resources:
        mem_mb=4000
    script:
        "scripts/fig6_panel_c.R"

if 'make_pcawg_metadata' not in config.keys():
    # not affected by 2 excluded samples
    pcawg_meta = pd.read_csv('metadata/pcawg_metadata.csv')
    pcawg_tumors = sorted(set(pcawg_meta['tumor']))
else:
    pcawg_tumors = []

rule top_cancer_gene_enrichment:
    input:
        cancer_ors=expand("cancer_genes/odds_ratios/neuron___vs___oligo/{tumor}.rda", tumor=pcawg_tumors)
    output:
        pdf="fig6/panel_d.pdf",
        svg="fig6/panel_d.svg",
        csv="fig6/panel_d.csv",
        supppdf="suppfig5/cancer_gene_ors.pdf",
        suppsvg="suppfig5/cancer_gene_ors.svg",
        fullsupppdf="suppfig5/cancer_gene_ors_full.pdf",
        fullsuppsvg="suppfig5/cancer_gene_ors_full.svg"
    log:
        "fig6/panel_d.log"
    resources:
        mem_mb=4000
    script:
        "scripts/fig6_panel_d.R"

# Same as above, but add in elderly MDA glia
rule top_cancer_gene_enrichment_with_mda_ols:
    input:
        cancer_ors=expand("cancer_genes/odds_ratios/neuron___vs___oligo_mdapta/{tumor}.rda", tumor=pcawg_tumors)
    output:
        pdf="fig6/panel_d_mdapta.pdf",
        svg="fig6/panel_d_mdapta.svg",
        csv="fig6/panel_d_mdapta.csv",
        supppdf="suppfig5/cancer_gene_ors_mdapta.pdf",
        suppsvg="suppfig5/cancer_gene_ors_mdapta.svg",
        fullsupppdf="suppfig5/cancer_gene_ors_mdapta_full.pdf",
        fullsuppsvg="suppfig5/cancer_gene_ors_mdapta_full.svg"
    log:
        "fig6/panel_d_mdapta.log"
    resources:
        mem_mb=4000
    script:
        "scripts/fig6_panel_d.R"
