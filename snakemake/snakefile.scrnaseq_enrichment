# vim: syntax=python

# scRNA-seq expression mapped to the GTEx gene model

# Min. signal coverage: _mc02
enrichment_scrnaseq_expression_mc02_config = dict(
    **{ 'output_dir': 'enrichment/scrnaseq_expression_mc02',
        'SIGNAL_MANIFEST': 'manifests/SCRNASEQ_EXPRESSION.MANIFEST' },
    # Cancer mutation density is compared against this covariate, so need the additional bin sizes
    **config['cancer_enrichment_config']
)

module enrichment_scrnaseq_expression_mc02:
    snakefile: "snakefile.enrichment"
    config: enrichment_scrnaseq_expression_mc02_config

use rule * from enrichment_scrnaseq_expression_mc02 as enrichment_scrnaseq_expression_mc02_*

use rule make_qbed_from_bigwig from enrichment_scrnaseq_expression_mc02 as enrichment_scrnaseq_expression_mc02_make_qbed_from_bigwig with:
    params:
        **enrichment_scrnaseq_expression_mc02.make_qbed_from_bigwig_params(0.2)

use rule enrichment_plot from enrichment_scrnaseq_expression_mc02 as enrichment_scrnaseq_expression_mc02_enrichment_plot with:
    params:
        ignore='enrichment_grid_R_ignore_none',
        group='donor,selection,celltype'
    output:
        expand('enrichment/scrnaseq_expression_mc02/quantile/{{mutclass}}.{{nquantiles}}quantiles.{output}',
            output=[ 'svg', 'pdf', 'csv' ])
    log:
        'enrichment/scrnaseq_expression_mc02/quantile/{mutclass}.{nquantiles}quantiles.log'


use rule enrichment_plot_corrected from enrichment_scrnaseq_expression_mc02 as enrichment_scrnaseq_expression_mc02_enrichment_plot_corrected with:
    params:
        ignore='enrichment_grid_R_ignore_none',
        group='donor,selection,celltype'
    output:
        expand('enrichment/scrnaseq_expression_mc02/quantile/{{mutclass}}.{{nquantiles}}quantiles.corrected.{output}',
            output=[ 'svg', 'pdf', 'csv' ])
    log:
        'enrichment/scrnaseq_expression_mc02/quantile/{mutclass}.{nquantiles}quantiles.corrected.log'

use rule sigenrichment_plot from enrichment_scrnaseq_expression_mc02 as enrichment_scrnaseq_expression_mc02_sigenrichment_plot with:
    params:
        ignore='enrichment_grid_R_ignore_none',
        group='donor,selection,celltype'
    output:
        expand('enrichment/scrnaseq_expression_mc02/quantile/{{mutclass}}.{{nquantiles}}quantiles_sigenrich_{{mutsig_selection_method}}.{output}',
            output=[ 'svg', 'pdf', 'csv' ])
    log:
        'enrichment/scrnaseq_expression_mc02/quantile/{mutclass}.{nquantiles}quantiles_sigenrich_{mutsig_selection_method}.log'


# Min. signal coverage: _mc08
enrichment_scrnaseq_expression_mc08_config = dict(
    **{ 'output_dir': 'enrichment/scrnaseq_expression_mc08',
        'SIGNAL_MANIFEST': 'manifests/SCRNASEQ_EXPRESSION.MANIFEST' },
    # Cancer mutation density is compared against this covariate, so need the additional bin sizes
    **config['cancer_enrichment_config']
)

module enrichment_scrnaseq_expression_mc08:
    snakefile: "snakefile.enrichment"
    config: enrichment_scrnaseq_expression_mc08_config

use rule * from enrichment_scrnaseq_expression_mc08 as enrichment_scrnaseq_expression_mc08_*

use rule make_qbed_from_bigwig from enrichment_scrnaseq_expression_mc08 as enrichment_scrnaseq_expression_mc08_make_qbed_from_bigwig with:
    params:
        **enrichment_scrnaseq_expression_mc08.make_qbed_from_bigwig_params(0.8)

use rule enrichment_plot from enrichment_scrnaseq_expression_mc08 as enrichment_scrnaseq_expression_mc08_enrichment_plot with:
    params:
        ignore='enrichment_grid_R_ignore_none',
        group='donor,selection,celltype'
    output:
        expand('enrichment/scrnaseq_expression_mc08/quantile/{{mutclass}}.{{nquantiles}}quantiles.{output}',
            output=[ 'svg', 'pdf', 'csv' ])
    log:
        'enrichment/scrnaseq_expression_mc08/quantile/{mutclass}.{nquantiles}quantiles.log'

use rule sigenrichment_plot from enrichment_scrnaseq_expression_mc08 as enrichment_scrnaseq_expression_mc08_sigenrichment_plot with:
    params:
        ignore='enrichment_grid_R_ignore_none',
        group='donor,selection,celltype'
    output:
        expand('enrichment/scrnaseq_expression_mc08/quantile/{{mutclass}}.{{nquantiles}}quantiles_sigenrich_{{mutsig_selection_method}}.{output}',
            output=[ 'svg', 'pdf', 'csv' ])
    log:
        'enrichment/scrnaseq_expression_mc08/quantile/{mutclass}.{nquantiles}quantiles_sigenrich_{mutsig_selection_method}.log'
