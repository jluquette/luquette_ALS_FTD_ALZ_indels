# vim: syntax=python

rule umap_plots:
    input:
        lambda wildcards: "scatacseq/umap.csv" if wildcards.panel_letter == 'c' else "scrnaseq/snRNA_1465a_table.csv"
    output:
        expand("fig4/panel_{{panel_letter}}_umap_plot.{ext}",
            ext=[ 'svg', 'pdf', 'jpeg' ])
    resources:
        mem_mb=24000
    log:
        "fig4/panel_{panel_letter}_umap_plot.log"
    script:
        "scripts/plot_umap.R"


# Little opaque here: MDA uses pass mutations (called type 'A' here, which is an
# old term) only; SCAN2 is not designed to rescue mutations in MDA data. PTA
# uses pass and rescue (type 'AB').
rule consolidate_enrichment_analyses:
    input:
        snv_indel_pairs=lambda wildcards:
            expand('enrichment/{datasource}/quantile/{{group}}___{qualtype}.10quantiles.csv',
                datasource=[ 'scrnaseq_expression_mc02', 'scatacseq', 'repliseq', 'roadmap_histone_signal_brain' ],
                qualtype=[ 'A', 'indel_A' ] if 'mda' in wildcards.group else [ 'AB', 'indel_AB' ])
    output:
        csv="fig4/{group}_consolidated_signals_10quantiles.csv"
    log:
        "fig4/{group}_consolidated_signals_10quantiles.log"
    benchmark:
        "fig4/{group}_consolidated_signals_10quantiles.benchmark.txt"
    params:
        tag="{group}"
    localrule: True
    resources:
        mem_mb=4000,
        localjob=1
    script:
        "scripts/consolidate_enrichment_tables.R"


rule many_enrichment_analyses:
    input:
        group1='fig4/{group1}_consolidated_signals_10quantiles.csv',
        group2='fig4/{group2}_consolidated_signals_10quantiles.csv'
    output:
        pdf="fig4/panels_cdefg_enrichment_analyses_{group1}_vs_{group2}.pdf",
        svg="fig4/panels_cdefg_enrichment_analyses_{group1}_vs_{group2}.svg",
        csv="fig4/panels_cdefg_enrichment_analyses_{group1}_vs_{group2}.csv"
    log:
        "fig4/panels_cdefg_enrichment_analyses_{group1}_vs_{group2}.log"
    params:
        group1_color=lambda wildcards: config['group_colors'][wildcards.group1],
        group2_color=lambda wildcards: config['group_colors'][wildcards.group2]
    localrule: True
    resources:
        mem_mb=1000,
        localjob=1
    script:
        "scripts/fig4_panels_cdefg.R"


rule consolidate_chromhmm:
    input:
        enrich_objects=lambda wildcards: "enrichment/roadmap_chromhmm_brain/bed_regions/{group}___" + config['muttype_to_passtype']['mda' if 'mda' in wildcards.group else 'pta'][wildcards.muttype] + "/bedenrich/SUMMARY.rda"
    output:
        csv="fig4/panel_h_chromhmm_{group}___{muttype}.csv"
    log:
        "fig4/panel_h_chromhmm_{group}___{muttype}.log"
    params:
        group_tag='{group}',
        signal='eid=E073',
        # 3_TssFlnk, 10_,11_,12_ (bivalent states) are all tiny genomic regions, creating
        # huge error bars that make the rest of the plot difficult to read.
        features="1_TssA,2_TssAFlnk,4_Tx,5_TxWk,6_EnhG,7_Enh,9_Het,13_ReprPC,14_ReprPCWk,15_Quies"
    localrule: True
    resources:
        mem_mb=1000,
        localjob=1
    script:
        "scripts/consolidate_bed_enrichment_tables.R"


rule plot_chromhmm_states:
    input:
        enrich_tables=expand("fig4/panel_h_chromhmm_{group}___{{muttype}}.csv",
            group=[ 'pta_neuron', 'pta_oligo' ])
    output:
        svg="fig4/panel_h_chromhmm___{muttype}.svg",
        pdf="fig4/panel_h_chromhmm___{muttype}.pdf"
    log:
        "fig4/panel_h_chromhmm___{muttype}.log"
    params:
        colors=','.join([ config['group_colors'][g] for g in [ 'pta_neuron', 'pta_oligo' ] ])
    localrule: True
    resources:
        mem_mb=1000,
        localjob=1
    script:
        "scripts/barplot_enrich_new2.R"


rule plot_chromhmm_states_all:
    input:
        enrich_tables=expand("fig4/panel_h_chromhmm_{group}___{{muttype}}.csv",
            group=config['comparison_groups'])
    output:
        svg="fig4/panel_h_chromhmm_all_comparisons___{muttype}.svg",
        pdf="fig4/panel_h_chromhmm_all_comparisons___{muttype}.pdf"
    log:
        "fig4/panel_h_chromhmm_all_comparisons___{muttype}.log"
    params:
        colors=','.join([ config['group_colors'][g] for g in config['comparison_groups'] ])
    localrule: True
    resources:
        mem_mb=1000,
        localjob=1
    script:
        "scripts/barplot_enrich_new2.R"


rule consolidate_nott_enhancers_and_promoters:
    input:
        enrich_objects=lambda wildcards: "enrichment/nott/bed_regions/{group}___" + config['muttype_to_passtype']['mda' if 'mda' in wildcards.group else 'pta'][wildcards.muttype] + "/bedenrich/SUMMARY.rda"
    output:
        csv="fig4/panel_i_nott_enhprom_{group}___{muttype}.csv"
    log:
        "fig4/panel_i_nott_enhprom_{group}___{muttype}.log"
    params:
        group_tag='{group}',
        signal='datasource=nott_enhprom',
        features="astrocyte_enhancer,neuron_enhancer,oligo_enhancer,microglia_enhancer,astrocyte_promoter,neuron_promoter,oligo_promoter,microglia_promoter"
    localrule: True
    resources:
        mem_mb=1000,
        localjob=1
    script:
        "scripts/consolidate_bed_enrichment_tables.R"


rule plot_nott_enhancers_and_promoters:
    input:
        enrich_tables=expand("fig4/panel_i_nott_enhprom_{group}___{{muttype}}.csv",
            group=[ 'pta_neuron', 'pta_oligo' ])
    output:
        svg="fig4/panel_i_nott_enhprom___{muttype}.svg",
        pdf="fig4/panel_i_nott_enhprom___{muttype}.pdf",
    log:
        "fig4/panel_i_nott_enhprom___{muttype}.log"
    params:
        colors=','.join([ config['group_colors'][g] for g in [ 'pta_neuron', 'pta_oligo' ] ])
    localrule: True
    resources:
        mem_mb=1000,
        localjob=1
    script:
        "scripts/barplot_enrich_new2.R"


rule plot_nott_enhancers_and_promoters_all:
    input:
        enrich_tables=expand("fig4/panel_i_nott_enhprom_{group}___{{muttype}}.csv",
            group=config['comparison_groups'])
    output:
        svg="fig4/panel_i_nott_enhprom_all_comparisons___{muttype}.svg",
        pdf="fig4/panel_i_nott_enhprom_all_comparisons___{muttype}.pdf",
    log:
        "fig4/panel_i_nott_enhprom_all_comparisons___{muttype}.log"
    params:
        colors=','.join([ config['group_colors'][g] for g in config['comparison_groups'] ])
    localrule: True
    resources:
        mem_mb=1000,
        localjob=1
    script:
        "scripts/barplot_enrich_new2.R"



####################################################################################
# UNUSED
####################################################################################

rule fig4_suppl_boca2_peaks:
    input:
        neuron_snv="enrichment/boca2/bed_regions/neuron___AB/bedenrich/SUMMARY.rda",
        neuron_indel="enrichment/boca2/bed_regions/neuron___indel_AB/bedenrich/SUMMARY.rda",
        oligo_snv="enrichment/boca2/bed_regions/oligo___AB/bedenrich/SUMMARY.rda",
        oligo_indel="enrichment/boca2/bed_regions/oligo___indel_AB/bedenrich/SUMMARY.rda"
    output:
        svg="fig4/suppl_boca2_peaks.svg",
        pdf="fig4/suppl_boca2_peaks.pdf",
        csv="fig4/suppl_boca2_peaks.csv"
    params:
        signal_to_plot='region=DLPFC',
        features="GABA,GLU,OLIG,MGAS"
    resources:
        mem_mb=1000
    log:
        "fig4/suppl_boca2_peaks_barplot_new.log"
    script:
        "scripts/barplot_enrich_new.R"


rule fig4_suppl_dna_repair_hotspots:
    input:
        neuron_snv="enrichment/dna_repair_hotspots/bed_regions/neuron___AB/bedenrich/SUMMARY.rda",
        neuron_indel="enrichment/dna_repair_hotspots/bed_regions/neuron___indel_AB/bedenrich/SUMMARY.rda",
        oligo_snv="enrichment/dna_repair_hotspots/bed_regions/oligo___AB/bedenrich/SUMMARY.rda",
        oligo_indel="enrichment/dna_repair_hotspots/bed_regions/oligo___indel_AB/bedenrich/SUMMARY.rda"
    output:
        svg="fig4/suppl_dna_repair_hotspots.svg",
        pdf="fig4/suppl_dna_repair_hotspots.pdf",
        csv="fig4/suppl_dna_repair_hotspots.csv"
    params:
        signal_to_plot='datasource=dnarepair',
        features="SAR-seq,Repair-seq"
    resources:
        mem_mb=1000
    log:
        "fig4/suppl_dna_repair_hotspots_barplot_new.log"
    script:
        "scripts/barplot_enrich_new.R"


rule fig4_suppl_hic_tads:
    input:
        neuron_snv="enrichment/hic_tads/bed_regions/neuron___AB/bedenrich/SUMMARY.rda",
        neuron_indel="enrichment/hic_tads/bed_regions/neuron___indel_AB/bedenrich/SUMMARY.rda",
        oligo_snv="enrichment/hic_tads/bed_regions/oligo___AB/bedenrich/SUMMARY.rda",
        oligo_indel="enrichment/hic_tads/bed_regions/oligo___indel_AB/bedenrich/SUMMARY.rda"
    output:
        svg="fig4/suppl_hic_tads.svg",
        pdf="fig4/suppl_hic_tads.pdf",
        csv="fig4/suppl_hic_tads.csv"
    params:
        signal_to_plot='datasource=hic_tads',
        features="ME45_Adult_Rep1_A,ME45_Adult_Rep1_B"
    resources:
        mem_mb=1000
    log:
        "fig4/suppl_hic_tads_barplot_new.log"
    script:
        "scripts/barplot_enrich_new.R"
