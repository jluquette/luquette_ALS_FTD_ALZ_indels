#!/bin/bash

outfile=snakefile.scan2_rescue_groups

if [ -f $outfile ]; then
    echo "output file $outfile already exists, please delete it first"
    exit 1
fi


cat > $outfile << EOF
# vim: syntax=python
#
# For the same reason as snakefile.scan2_per_donor, SCAN2 rescue requires
# a module rule for each group.  In short, rescue produces many output
# objects; while these object names are trivial to constuct, it requires
# knowing the rescue group, a wildcard, so it cannot be known in the
# output: section of the rule.
#
# ------------------ THIS FILE IS AUTOMATICALLY GENERATED -------------------
EOF

groups=$(awk -F, 'BEGIN { analysis_col=0; group_col=0; } NR==1 { for (i=1; i <= NF; ++i) { if ($i == "group") group_col=i;  if ($i == "analysis") analysis_col=i; } } NR>1 { if ($analysis_col == "scan2_rescue") print $group_col; }'  ../metadata/group_metadata.csv)
echo "$groups"

for group in $groups; do
    cat >> $outfile << EOF


module scan2_rescue_$group:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_rescue_run from scan2_rescue_${group} as scan2_rescue_run_${group} with:
    output:
        rdas=protected(expand('scan2/rescue_{{rescue_group}}/objects/{sample}_scan2_object_rescue.rda',
            sample=config['scan2_rescue_groups']['${group}'].values()))

use rule scan2_permtool_run from scan2_rescue_${group} as scan2_permtool_run_${group} with:
    input:
        scan2_bin="scan2/SCAN2_specific_commit/bin/scan2",
        scan2_snakefile="scan2/SCAN2_specific_commit/snakemake/Snakefile",
        scan2_scripts="scan2/SCAN2_specific_commit/scripts",
        yaml="scan2/permtool/${group}/scan.yaml"
    output:
        expand("scan2/permtool/${group}/perms_{muttype}_{passtype}.rda",
            muttype=[ 'snv', 'indel'], passtype=[ 'pass', 'rescue' ]),
        expand('scan2/permtool/${group}/perms_by_sample/{sample}/{muttype}_{passtype}.rda',
            sample=config['scan2_rescue_groups']['${group}'].values(),
            muttype=[ 'snv', 'indel'], passtype=[ 'pass', 'rescue' ])
    log:
        "scan2/permtool/${group}/run.log"
    benchmark:
        "scan2/permtool/${group}/run.benchmark.txt"
    params:
        outdir="scan2/permtool/${group}"

EOF
done >> $outfile
