#!/bin/bash

outfile=snakefile.scan2_per_donor

if [ -f $outfile ]; then
    echo "output file $outfile already exists, please delete it first"
    exit 1
fi


cat > $outfile << EOF
# vim: syntax=python
#
# It doesn't seem possible to make the standard scan2_call_mutations rule
# create all output .rda files (one per single cell) for each donor because
# the donor is a wildcard and outputs cannot depend on wildcards.  Further,
# since one invocation of SCAN2 creates all such outputs per donor, it would
# be incorrect to allow tools further down the pipeline to ask for each
# individual output file.
#
# Using modules here as a workaround.
#
# ------------------ THIS FILE IS AUTOMATICALLY GENERATED -------------------
EOF

donors=$(tail -n +2 ../metadata/immutable_metadata.csv | cut -f1 -d, | sort | uniq)

for donor in $donors; do
    cat >> $outfile << EOF


module scan2_call_$donor:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_${donor} as scan2_call_mutations_${donor} with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['${donor}']['single_cell'].keys()))
EOF
done >> $outfile
