# vim: syntax=python

rule raw_spectrum:
    input:
        csv="tables/{celltype}___mut___{qualtype}.csv",
    output:
        svg="mutsigs/raw_spectra/{celltype}___raw_spectrum___{qualtype}.svg",
        pdf="mutsigs/raw_spectra/{celltype}___raw_spectrum___{qualtype}.pdf",
        csv="mutsigs/raw_spectra/{celltype}___raw_spectrum___{qualtype}.csv"
    params:
        sigtype=lambda wildcards: 'id83' if wildcards.qualtype.startswith('indel') else 'sbs96',
        plot_title='{celltype}'
    resources:
        mem=4000
    log:
        csv="mutsigs/raw_spectra/{celltype}___raw_spectrum___{qualtype}.log",
    script:
        "scripts/plot_raw_spectrum.R"


# The only difference between SNV and indel COSMIC databases is that
# we add the PTA universal artifact signature to COSMIC SNV.
rule make_cosmic_indel_table:
    input:
        cosmic="input/any___cosmic___indel_A.csv",
    output:
        "mutsigs/cosmic_full___indel_A.csv"
    resources:
        mem=4000
    log:
        "mutsigs/cosmic_full___indel_A.log"
    script:
        "scripts/make_cosmic_indel_table.R"


rule make_cosmic_snv_table:
    input:
        cosmic="input/any___cosmic___A.csv",
    output:
        "mutsigs/cosmic_full___A.csv"
    resources:
        mem=4000
    log:
        "mutsigs/cosmic_full___A.log"
    script:
        "scripts/make_cosmic_snv_table.R"


rule fit_cosmic:
    input:
        muts="tables/{celltype}___mut___{qualtype}.csv",
        mutburden="aging_rates/{celltype}___mutburden___{qualtype}.csv",
        cosmic="mutsigs/{cosmic}___{qualtype}.csv",
        sigb="scan2_paper_output/Lodato2018_SignatureData_Aging.csv"
    output:
        mutmat="mutsigs/{cosmic}/{celltype}___mutmat___{qualtype}.csv",
        expomat="mutsigs/{cosmic}/{celltype}___expomat___{qualtype}.csv"
    params:
        muttype=lambda wildcards: 'Indel' if wildcards.qualtype == 'indel_A' else 'SNV',
        amptype=lambda wildcards: 'MDA' if "mda" in wildcards.celltype else 'PTA'
    resources:
        mem=4000
    log:
        "mutsigs/{cosmic}/{celltype}___cosmic_fit___{qualtype}.log"
    script:
        "scripts/fit_cosmic.R"


# Computes several scores to help decide which COSMIC signatures
# are likely present in the mutations.
rule score_cosmic_sigs:
    input:
        "mutsigs/cosmic_full/{celltype}___mutmat___{qualtype}.csv",
        "aging_rates/{celltype}___mutburden___{qualtype}.csv",
        "mutsigs/cosmic_full___{qualtype}.csv"
    output:
        "mutsigs/cosmic_signature_inclusion/{celltype}___signature_scores___{qualtype}.csv"
    log:
        "mutsigs/cosmic_signature_inclusion/{celltype}___signature_scores___{qualtype}.log"
    resources:
        mem=8000
    params:
        celltype=lambda wildcards: 'Neuron' if wildcards.celltype == 'neuron' else 'Oligo',
        qualtype=lambda wildcards: 'Indel' if wildcards.qualtype == 'indel_A' else 'SNV'
    script:
        "scripts/score_cosmic_signatures.R"


# Use scores to decide which COSMIC signatures to keep
rule select_cosmic_sigs:
    input:
        expand("mutsigs/cosmic_signature_inclusion/{celltype}___signature_scores___{{qualtype}}.csv",
            celltype=celltypes_to_compute)
    output:
        csv="mutsigs/cosmic_signature_inclusion/all___signature_selection___{qualtype}.csv"
    resources:
        mem=1000
    log:
        "mutsigs/cosmic_signature_inclusion/all___signature_selection___{qualtype}.log"
    script:
        "scripts/select_cosmic_sigs.R"


# Use output of fig2_select_cosmic_sigs to make a COSMIC table with only
# the selected signatures.
# N.B. the reduced COSMIC table contains signatures present in any of
# celltypes_to_compute. This allows direct comparisons between all signatures
# in all celltypes - if we made reduced tables specific to each celltype then
# non-shared signatures would trivially be 0 in one celltype, making comparison
# hard to interpret.
rule reduce_cosmic:
    input:
        "mutsigs/cosmic_signature_inclusion/all___signature_selection___{qualtype}.csv",
        "mutsigs/cosmic_full___{qualtype}.csv"
    output:
        "mutsigs/cosmic_reduced___{qualtype}.csv"
    resources:
        mem=4000
    log:
        "mutsigs/cosmic_reduced___{qualtype}.log"
    script:
        "scripts/reduce_cosmic.R"


# Creates two barplots:
#   - stacked barplot of absolute exposure levels 
#   - stacked barplot of relative exposure levels (i.e., all bars are 1.0 tall)
rule cosmic_barplots:
    input:
        "mutsigs/cosmic_reduced/{celltype}___expomat___{qualtype}.csv",
        "aging_rates/{celltype}___mutburden___{qualtype}.csv"
    output:
        svg="mutsigs/cosmic_aging/{celltype}___barplots___{qualtype}.svg",
        pdf="mutsigs/cosmic_aging/{celltype}___barplots___{qualtype}.pdf",
        csv="mutsigs/cosmic_aging/{celltype}___barplots___{qualtype}.csv"
    resources:
        mem=4000
    log:
        "mutsigs/cosmic_aging/{celltype}___barplots___{qualtype}.log"
    script:
        "scripts/plot_cosmic_barplots.R"


# Scatter plots of per-sample age vs. signature exposure.
# All celltypes are plotted on the same panel to allow visual comparison.
ruleorder: model_cosmic_vs_age_all > model_cosmic_vs_age
rule model_cosmic_vs_age_all:
    input:
        expomats=expand("mutsigs/cosmic_reduced/{celltype}___expomat___{{qualtype}}.csv",
            celltype=celltypes_to_compute),
        mutburdens=expand("aging_rates/{celltype}___mutburden___{{qualtype}}.csv",
            celltype=celltypes_to_compute)
    output:
        svg="mutsigs/cosmic_aging/all___cosmic_models_vs_age___{qualtype}.svg",
        pdf="mutsigs/cosmic_aging/all___cosmic_models_vs_age___{qualtype}.pdf",
        csv="mutsigs/cosmic_aging/all___cosmic_models_vs_age___{qualtype}.csv"
    resources:
        mem=4000
    log:
        "mutsigs/cosmic_aging/all___cosmic_models_vs_age___{qualtype}.log"
    script:
        "scripts/model_cosmic_vs_age.R"

# Same as above but include MDA
ruleorder: model_cosmic_vs_age_all_mda > model_cosmic_vs_age
rule model_cosmic_vs_age_all_mda:
    input:
        expomats=expand("mutsigs/cosmic_reduced/{celltype}___expomat___{{qualtype}}.csv",
            celltype=celltypes_to_compute + [ 'oligo_mda' ]),
        mutburdens=expand("aging_rates/{celltype}___mutburden___{{qualtype}}.csv",
            celltype=celltypes_to_compute + [ 'oligo_mda' ])
    output:
        svg="mutsigs/cosmic_aging/all_mda___cosmic_models_vs_age___{qualtype}.svg",
        pdf="mutsigs/cosmic_aging/all_mda___cosmic_models_vs_age___{qualtype}.pdf",
        csv="mutsigs/cosmic_aging/all_mda___cosmic_models_vs_age___{qualtype}.csv"
    resources:
        mem=4000
    log:
        "mutsigs/cosmic_aging/all_mda___cosmic_models_vs_age___{qualtype}.log"
    script:
        "scripts/model_cosmic_vs_age.R"


# Scatter plots of per-sample age vs. signature exposure.
# All celltypes are plotted on the same panel to allow visual comparison.
rule model_cosmic_vs_age:
    input:
        expomats="mutsigs/cosmic_reduced/{celltype}___expomat___{qualtype}.csv",
        mutburdens="aging_rates/{celltype}___mutburden___{qualtype}.csv"
    output:
        svg="mutsigs/cosmic_aging/{celltype}___cosmic_models_vs_age___{qualtype}.svg",
        pdf="mutsigs/cosmic_aging/{celltype}___cosmic_models_vs_age___{qualtype}.pdf",
        csv="mutsigs/cosmic_aging/{celltype}___cosmic_models_vs_age___{qualtype}.csv"
    resources:
        mem=4000
    log:
        "mutsigs/cosmic_aging/{celltype}___cosmic_models_vs_age___{qualtype}.log"
    script:
        "scripts/model_cosmic_vs_age.R"
