# vim: syntax=python

rule fig3_umap_plot:
    input:
        lambda wildcards: "input/any___scatacseq_umap___none.csv" if wildcards.panel_letter == 'b' else "input/any___scrnaseq_umap___none.csv"
    output:
        expand("fig3/panel_{{panel_letter}}_umap_plot.{ext}",
            ext=[ 'svg', 'pdf', 'jpeg' ])
    resources:
        mem=24000
    log:
        "fig3/panel_{panel_letter}_umap_plot.log"
    script:
        "scripts/plot_umap.R"


rule fig3a:
    input:
        neuron_snv="enrichment/scrnaseq_expression_mc08/quantile/neuron___AB.10quantiles.csv",
        neuron_indel="enrichment/scrnaseq_expression_mc08/quantile/neuron___indel_AB.10quantiles.csv",
        oligo_snv="enrichment/scrnaseq_expression_mc08/quantile/oligo___AB.10quantiles.csv",
        oligo_indel="enrichment/scrnaseq_expression_mc08/quantile/oligo___indel_AB.10quantiles.csv"
    output:
        pdf="fig3/panel_a.pdf",
        svg="fig3/panel_a.svg",
        csv="fig3/panel_a.csv"
    log:
        "fig3/panel_a.log"
    resources:
        mem=4000
    script:
        "scripts/fig3_panel_a.R"


rule fig3b:
    input:
        neuron_snv="enrichment/scatacseq/quantile/neuron___AB.10quantiles.csv",
        neuron_indel="enrichment/scatacseq/quantile/neuron___indel_AB.10quantiles.csv",
        oligo_snv="enrichment/scatacseq/quantile/oligo___AB.10quantiles.csv",
        oligo_indel="enrichment/scatacseq/quantile/oligo___indel_AB.10quantiles.csv"
    output:
        pdf="fig3/panel_b.pdf",
        svg="fig3/panel_b.svg",
        csv="fig3/panel_b.csv"
    log:
        "fig3/panel_b.log"
    resources:
        mem=4000
    script:
        "scripts/fig3_panel_b.R"


rule fig3c:
    input:
        neuron_snv="enrichment/encode_replichip/quantile/neuron___AB.10quantiles.csv",
        neuron_indel="enrichment/encode_replichip/quantile/neuron___indel_AB.10quantiles.csv",
        oligo_snv="enrichment/encode_replichip/quantile/oligo___AB.10quantiles.csv",
        oligo_indel="enrichment/encode_replichip/quantile/oligo___indel_AB.10quantiles.csv"
    output:
        pdf="fig3/panel_c.pdf",
        svg="fig3/panel_c.svg",
        csv="fig3/panel_c.csv"
    log:
        "fig3/panel_c.log"
    resources:
        mem=4000
    script:
        "scripts/fig3_panel_c.R"

# Version of above but using RepliSeq rather than RepliChIP
rule fig3c2:
    input:
        neuron_snv="enrichment/repliseq/quantile/neuron___AB.10quantiles.csv",
        neuron_indel="enrichment/repliseq/quantile/neuron___indel_AB.10quantiles.csv",
        oligo_snv="enrichment/repliseq/quantile/oligo___AB.10quantiles.csv",
        oligo_indel="enrichment/repliseq/quantile/oligo___indel_AB.10quantiles.csv"
    output:
        pdf="fig3/panel_c2.pdf",
        svg="fig3/panel_c2.svg",
        csv="fig3/panel_c2.csv"
    log:
        "fig3/panel_c2.log"
    resources:
        mem=4000
    script:
        "scripts/fig3_panel_c2.R"


rule fig3d:
    input:
        neuron_snv="enrichment/roadmap_histone_signal_brain/quantile/neuron___AB.5quantiles.csv",
        neuron_indel="enrichment/roadmap_histone_signal_brain/quantile/neuron___indel_AB.5quantiles.csv",
        oligo_snv="enrichment/roadmap_histone_signal_brain/quantile/oligo___AB.5quantiles.csv",
        oligo_indel="enrichment/roadmap_histone_signal_brain/quantile/oligo___indel_AB.5quantiles.csv"
    output:
        pdf="fig3/panel_d.pdf",
        svg="fig3/panel_d.svg",
        csv="fig3/panel_d.csv"
    log:
        "fig3/panel_d.log"
    resources:
        mem=4000
    script:
        "scripts/fig3_panel_d.R"


rule fig3e:
    input:
        # would like to expand() this but also want to keep names of inputs
        neuron_histone="enrichment/roadmap_histone_signal_brain/quantile/neuron___A.3quantiles_sigenrich.csv",
        neuron_nott="enrichment/nott/quantile/neuron___A.3quantiles_sigenrich.csv",
        neuron_scatacseq="enrichment/scatacseq/quantile/neuron___A.3quantiles_sigenrich.csv",
        neuron_scrnaseq="enrichment/scrnaseq_expression_mc08/quantile/neuron___A.3quantiles_sigenrich.csv",
        neuron_gtex="enrichment/gtex_expression_mc08/quantile/neuron___A.3quantiles_sigenrich.csv",
        neuron_replichip="enrichment/encode_replichip/quantile/neuron___A.3quantiles_sigenrich.csv",
        neuron_repliseq="enrichment/repliseq/quantile/neuron___A.3quantiles_sigenrich.csv",
        oligo_histone="enrichment/roadmap_histone_signal_brain/quantile/oligo___A.3quantiles_sigenrich.csv",
        oligo_nott="enrichment/nott/quantile/oligo___A.3quantiles_sigenrich.csv",
        oligo_scatacseq="enrichment/scatacseq/quantile/oligo___A.3quantiles_sigenrich.csv",
        oligo_scrnaseq="enrichment/scrnaseq_expression_mc08/quantile/oligo___A.3quantiles_sigenrich.csv",
        oligo_gtex="enrichment/gtex_expression_mc08/quantile/oligo___A.3quantiles_sigenrich.csv",
        oligo_replichip="enrichment/encode_replichip/quantile/oligo___A.3quantiles_sigenrich.csv",
        oligo_repliseq="enrichment/repliseq/quantile/oligo___A.3quantiles_sigenrich.csv"
    output:
        pdf="fig3/panel_e.pdf",
        svg="fig3/panel_e.svg"
    log:
        "fig3/panel_e.log"
    resources:
        mem=4000
    script:
        "scripts/fig3_panel_e.R"



rule fig3e_supplement:
    input:
        # would like to expand() this but also want to keep names of inputs
        neuron_histone="enrichment/roadmap_histone_signal_brain/quantile/neuron_sbs16___A.{nq}quantiles.csv",
        neuron_nott="enrichment/nott/quantile/neuron_sbs16___A.{nq}quantiles.csv",
        neuron_scatacseq="enrichment/scatacseq/quantile/neuron_sbs16___A.{nq}quantiles.csv",
        neuron_scrnaseq="enrichment/scrnaseq_expression_mc08/quantile/neuron_sbs16___A.{nq}quantiles.csv",
        neuron_gtex="enrichment/gtex_expression_mc08/quantile/neuron_sbs16___A.{nq}quantiles.csv",
        neuron_replichip="enrichment/encode_replichip/quantile/neuron_sbs16___A.{nq}quantiles.csv",
        neuron_repliseq="enrichment/repliseq/quantile/neuron_sbs16___A.{nq}quantiles.csv",
        oligo_histone="enrichment/roadmap_histone_signal_brain/quantile/oligo_sbs1___A.{nq}quantiles.csv",
        oligo_nott="enrichment/nott/quantile/oligo_sbs1___A.{nq}quantiles.csv",
        oligo_scatacseq="enrichment/scatacseq/quantile/oligo_sbs1___A.{nq}quantiles.csv",
        oligo_scrnaseq="enrichment/scrnaseq_expression_mc08/quantile/oligo_sbs1___A.{nq}quantiles.csv",
        oligo_gtex="enrichment/gtex_expression_mc08/quantile/oligo_sbs1___A.{nq}quantiles.csv",
        oligo_replichip="enrichment/encode_replichip/quantile/oligo_sbs1___A.{nq}quantiles.csv",
        oligo_repliseq="enrichment/repliseq/quantile/oligo_sbs1___A.{nq}quantiles.csv"
    output:
        pdf="fig3/panel_e_supplement_{nq}quantiles.pdf",
        svg="fig3/panel_e_supplement_{nq}quantiles.svg"
    log:
        "fig3/panel_e_supplement_{nq}quantiles.log"
    resources:
        mem=4000
    script:
        "scripts/fig3_panel_e_supplement.R"



rule fig3_suppl_nott_enhprom:
    input:
        neuron_snv="enrichment/nott/bed_regions/neuron___AB/bedenrich/SUMMARY.rda",
        neuron_indel="enrichment/nott/bed_regions/neuron___indel_AB/bedenrich/SUMMARY.rda",
        oligo_snv="enrichment/nott/bed_regions/oligo___AB/bedenrich/SUMMARY.rda",
        oligo_indel="enrichment/nott/bed_regions/oligo___indel_AB/bedenrich/SUMMARY.rda"
    output:
        svg="fig3/suppl_nott_enhprom.svg",
        pdf="fig3/suppl_nott_enhprom.pdf",
        csv="fig3/suppl_nott_enhprom.csv"
    params:
        signal_to_plot='datasource=nott_enhprom',
        features="astrocyte_enhancer,neuron_enhancer,oligo_enhancer,microglia_enhancer,astrocyte_promoter,neuron_promoter,oligo_promoter,microglia_promoter"
    resources:
        mem=1000
    log:
        "fig3/suppl_nott_enhprom_barplot_new.log"
    script:
        "scripts/barplot_enrich_new.R"



rule fig3_suppl_boca2_peaks:
    input:
        neuron_snv="enrichment/boca2/bed_regions/neuron___AB/bedenrich/SUMMARY.rda",
        neuron_indel="enrichment/boca2/bed_regions/neuron___indel_AB/bedenrich/SUMMARY.rda",
        oligo_snv="enrichment/boca2/bed_regions/oligo___AB/bedenrich/SUMMARY.rda",
        oligo_indel="enrichment/boca2/bed_regions/oligo___indel_AB/bedenrich/SUMMARY.rda"
    output:
        svg="fig3/suppl_boca2_peaks.svg",
        pdf="fig3/suppl_boca2_peaks.pdf",
        csv="fig3/suppl_boca2_peaks.csv"
    params:
        signal_to_plot='region=DLPFC',
        features="GABA,GLU,OLIG,MGAS"
    resources:
        mem=1000
    log:
        "fig3/suppl_boca2_peaks_barplot_new.log"
    script:
        "scripts/barplot_enrich_new.R"



rule fig3_suppl_dna_repair_hotspots:
    input:
        neuron_snv="enrichment/dna_repair_hotspots/bed_regions/neuron___AB/bedenrich/SUMMARY.rda",
        neuron_indel="enrichment/dna_repair_hotspots/bed_regions/neuron___indel_AB/bedenrich/SUMMARY.rda",
        oligo_snv="enrichment/dna_repair_hotspots/bed_regions/oligo___AB/bedenrich/SUMMARY.rda",
        oligo_indel="enrichment/dna_repair_hotspots/bed_regions/oligo___indel_AB/bedenrich/SUMMARY.rda"
    output:
        svg="fig3/suppl_dna_repair_hotspots.svg",
        pdf="fig3/suppl_dna_repair_hotspots.pdf",
        csv="fig3/suppl_dna_repair_hotspots.csv"
    params:
        signal_to_plot='datasource=dnarepair',
        features="SAR-seq,Repair-seq"
    resources:
        mem=1000
    log:
        "fig3/suppl_dna_repair_hotspots_barplot_new.log"
    script:
        "scripts/barplot_enrich_new.R"
