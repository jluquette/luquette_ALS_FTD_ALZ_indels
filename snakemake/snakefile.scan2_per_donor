# vim: syntax=python
#
# It doesn't seem possible to make the standard scan2_call_mutations rule
# create all output .rda files (one per single cell) for each donor because
# the donor is a wildcard and outputs cannot depend on wildcards.  Further,
# since one invocation of SCAN2 creates all such outputs per donor, it would
# be incorrect to allow tools further down the pipeline to ask for each
# individual output file.
#
# Using modules here as a workaround.
#
# ------------------ THIS FILE IS AUTOMATICALLY GENERATED -------------------


module scan2_call_1278:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_1278 as scan2_call_mutations_1278 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['1278']['single_cell'].keys()))


module scan2_call_1465:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_1465 as scan2_call_mutations_1465 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['1465']['single_cell'].keys()))


module scan2_call_4638:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_4638 as scan2_call_mutations_4638 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['4638']['single_cell'].keys()))


module scan2_call_4643:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_4643 as scan2_call_mutations_4643 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['4643']['single_cell'].keys()))


module scan2_call_5087:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_5087 as scan2_call_mutations_5087 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['5087']['single_cell'].keys()))


module scan2_call_5171:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_5171 as scan2_call_mutations_5171 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['5171']['single_cell'].keys()))


module scan2_call_5219:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_5219 as scan2_call_mutations_5219 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['5219']['single_cell'].keys()))


module scan2_call_5559:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_5559 as scan2_call_mutations_5559 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['5559']['single_cell'].keys()))


module scan2_call_5657:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_5657 as scan2_call_mutations_5657 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['5657']['single_cell'].keys()))


module scan2_call_5817:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_5817 as scan2_call_mutations_5817 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['5817']['single_cell'].keys()))


module scan2_call_5823:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_5823 as scan2_call_mutations_5823 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['5823']['single_cell'].keys()))


module scan2_call_5871:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_5871 as scan2_call_mutations_5871 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['5871']['single_cell'].keys()))


module scan2_call_936:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_936 as scan2_call_mutations_936 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['936']['single_cell'].keys()))


module scan2_call_CON1901106:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_CON1901106 as scan2_call_mutations_CON1901106 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['CON1901106']['single_cell'].keys()))


module scan2_call_CON301159:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_CON301159 as scan2_call_mutations_CON301159 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['CON301159']['single_cell'].keys()))


module scan2_call_UMB4976:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_UMB4976 as scan2_call_mutations_UMB4976 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['UMB4976']['single_cell'].keys()))


module scan2_call_UMB5451:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_UMB5451 as scan2_call_mutations_UMB5451 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['UMB5451']['single_cell'].keys()))


module scan2_call_UMB5572:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_UMB5572 as scan2_call_mutations_UMB5572 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['UMB5572']['single_cell'].keys()))


module scan2_call_UMB5666:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_UMB5666 as scan2_call_mutations_UMB5666 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['UMB5666']['single_cell'].keys()))


module scan2_call_UMB5943:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_UMB5943 as scan2_call_mutations_UMB5943 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['UMB5943']['single_cell'].keys()))
