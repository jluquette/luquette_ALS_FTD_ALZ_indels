# vim: syntax=python
#
# It doesn't seem possible to make the standard scan2_call_mutations rule
# create all output .rda files (one per single cell) for each donor because
# the donor is a wildcard and outputs cannot depend on wildcards.  Further,
# since one invocation of SCAN2 creates all such outputs per donor, it would
# be incorrect to allow tools further down the pipeline to ask for each
# individual output file.
#
# Using modules here as a workaround.
#
# ------------------ THIS FILE IS AUTOMATICALLY GENERATED -------------------


module scan2_call_UMB1286:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_UMB1286 as scan2_call_mutations_UMB1286 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['UMB1286']['single_cell'].keys()))


module scan2_call_UMB1762:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_UMB1762 as scan2_call_mutations_UMB1762 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['UMB1762']['single_cell'].keys()))


module scan2_call_UMB580:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_UMB580 as scan2_call_mutations_UMB580 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['UMB580']['single_cell'].keys()))


module scan2_call_UMB682:
    snakefile: "snakefile.scan2"
    config: config

use rule scan2_call_mutations from scan2_call_UMB682 as scan2_call_mutations_UMB682 with:
    output:
        rdas=protected(expand('scan2/{{donor}}/scan2/sensitivity/{sample}/scan2_object.rda',
            sample=bams['UMB682']['single_cell'].keys()))
