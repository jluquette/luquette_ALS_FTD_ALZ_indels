# vim: syntax=python
#


import yaml

# dict: donor ID -> joint matrix file (.tab.gz)
with open('metadata/scan2_joint_depth_matrixes.yaml', 'r') as yf:
    scan2_depth_matrixes = yaml.load(yf, Loader=yaml.FullLoader)


# Convenience: for some analyses that use bedtools, extract only the
# intervals that should be removed.
rule tile_to_mask:
    input:
        "alignability/genome_tiles/genome_tiles_{binsize}binsize.bed"
    output:
        "alignability/genome_tiles/genome_mask_{binsize}binsize.bed"
    resources:
        mem=1000
    shell:
        """
        grep '0$' {input} > {output}
        """


# The ultimate output of the alignability analysis: a set of tiles covering
# the genome with poorly aligned regions removed.
rule tile_genome:
    input:
        rdas=expand("alignability/base_tile_size_tables/chr{chr}.rda", chr=chrs),
        metadata="metadata/metadata_82cells_combined.csv"  # for sample IDs of PTA single cells
    output:
        "alignability/genome_tiles/genome_tiles_{binsize}binsize.bed"
    log:
        "alignability/genome_tiles/genome_tiles_{binsize}binsize.log"
    params:
        binsize="{binsize}"
    resources:
        mem=40000
    script:
        "scripts/tile_genome_no_badbins.R"


rule digest_chrom:
    input:
        matfiles=scan2_depth_matrixes.values(),
        matfileidxs=[ tab + '.tbi' for tab in scan2_depth_matrixes.values() ],
    output:
        rda="alignability/base_tile_size_tables/chr{chr}.rda"
    benchmark:
        "alignability/base_tile_size_tables/benchmark_chr{chr}.txt"
    log:
        "alignability/base_tile_size_tables/chr{chr}.log"
    resources:
        mem=lambda wildcards, input, threads: 3000*threads
    params:
        chrom="{chr}",
        base_tile_size=100,   # in basepairs
        tiles_per_chunk=10000 # = 1MB chunks
    threads: 20
    script:
        "scripts/digest_chrom_depth.R"


# this script expects an input file format that is no longer generated
# XXX: some of the variables (like 'gs') are created in plot_bin_classes.R
#rule plot_digest:
    #input:
        #"alignability/base_tile_size_tables/chr{chr}.rda"  # this is not correct
    #output:
        #"alignability/data_plots/chr{chr}.{resolution}.svg",
        #"alignability/data_plots/chr{chr}.{resolution}.pdf"
    #resources:
        #mem=8000
    #params:
        #"{resolution}"
    #script:
        #"scripts/plot_chrom_depth.R"


rule plot_bin_classes:
    input:
        expand("alignability/base_tile_size_tables/chr{chr}.rda", chr=chrs)
    output:
        expand("alignability/plots/chromosome_bin_classes_heatmap.{output}",
            output=['svg', 'pdf', 'jpeg']),
        expand("alignability/plots/chromosome_bin_classes_barplot.{output}",
            output=['svg', 'pdf'])
    resources:
        mem=40000
    log:
        "alignability/plots/chromosome_bin_classes.log"
    script:
        "scripts/plot_bin_classes.R"
